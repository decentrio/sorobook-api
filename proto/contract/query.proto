syntax = "proto3";
package contract;

import "google/api/annotations.proto";
import "contract/contract.proto";
import "contract/code.proto";

option go_package = "github.com/decentrio/sorobook-api/types/contract";

service ContractQuery {
  // UserInteractionContracts queries list contracts user has interacted.
  rpc UserInteractionContracts(UserInteractionContractsRequest)
      returns (UserInteractionContractsResponse) {
    option (google.api.http).get = "/user-contracts/{address}";
  }

  // ContractData queries list newest data entries of contract
  rpc ContractData(ContractDataRequest) returns (ContractDataResponse) {
    option (google.api.http).get = "/contract-entries/{contract_id}";
  }

  // ContracCode queries contract code data with the given contract id
  rpc ContractCode(ContractCodeRequest) returns (ContractCodeResponse) {
    option (google.api.http).get = "/contract/code/{contract_id}";
  }

  // ContracCodes queries contract codes have been deployed
  rpc ContractCodes(ContractCodesRequest) returns (ContractCodesResponse) {
    option (google.api.http).get = "/contract/codes";
  }

  // ContractsAtLedger queries contract codes have been deployed at the given
  // ledger
  rpc ContractsAtLedger(ContractsAtLedgerRequest)
      returns (ContractsAtLedgerResponse) {
    option (google.api.http).get = "/contract/codes/{ledger}";
  }
}
