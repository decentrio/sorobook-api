swagger: "2.0"
info:
  title: v1/query.proto
  version: version not set
tags:
  - name: Query
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/contract-entries/{contractId}/keys:
    get:
      operationId: Query_ContractKeys
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ContractKeysResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
      tags:
        - Query
  /v1/events/count/{contractId}:
    get:
      summary: ContractEventCount queries number of events that match the given contract id.
      operationId: Query_ContractEventCount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ContractEventCountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
      tags:
        - Query
  /v1/events/{contractId}/{page}:
    get:
      summary: ContractEvents queries 10 events that match the given page.
      operationId: Query_ContractEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ContractEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
        - name: page
          in: path
          required: true
          type: integer
          format: int32
      tags:
        - Query
  /v1/events/{id}:
    get:
      summary: Event queries event info given event id.
      operationId: Query_Event
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EventResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Query
  /v1/ledger-by-hash/{hash}:
    get:
      summary: LedgerHash queries ledger info given ledger hash.
      operationId: Query_LedgerHash
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LedgerHashResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: hash
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Query
  /v1/ledger-by-seq/{sequence}:
    get:
      summary: Ledger queries ledger info given ledger sequence.
      operationId: Query_Ledger
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LedgerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: sequence
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Query
  /v1/ledgers/count:
    get:
      summary: LedgerCount queries number of ledgers in database.
      operationId: Query_LedgerCount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LedgerCountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Query
  /v1/transactions-at-ledger-hash/{ledgerHash}/{page}:
    get:
      summary: TransactionsAtLedgerHash queries all transactions that match the given ledger hash.
      operationId: Query_TransactionsAtLedgerHash
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransactionsAtLedgerHashResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ledgerHash
          in: path
          required: true
          type: integer
          format: int64
        - name: page
          in: path
          required: true
          type: integer
          format: int32
      tags:
        - Query
  /v1/transactions-at-ledger-seq/{ledger}/{page}:
    get:
      summary: TransactionsAtLedgerSeq queries all transactions that match the given ledger sequence.
      operationId: Query_TransactionsAtLedgerSeq
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransactionsAtLedgerSeqResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ledger
          in: path
          required: true
          type: integer
          format: int64
        - name: page
          in: path
          required: true
          type: integer
          format: int32
      tags:
        - Query
  /v1/transactions-by-address/{address}/{page}:
    get:
      summary: TransactionsByAddress queries all transactions that match the given source address.
      operationId: Query_TransactionsByAddress
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransactionsByAddressResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: address
          in: path
          required: true
          type: string
        - name: page
          in: path
          required: true
          type: integer
          format: int32
      tags:
        - Query
  /v1/transactions/{hash}:
    get:
      summary: Transaction queries transaction info given transaction hash.
      operationId: Query_Transaction
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransactionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: hash
          in: path
          required: true
          type: string
      tags:
        - Query
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1ContractEventCountResponse:
    type: object
    properties:
      total:
        type: string
        format: int64
  v1ContractEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1EventInfo'
      page:
        type: integer
        format: int32
  v1ContractKeysResponse:
    type: object
    properties:
      keys:
        type: array
        items:
          type: object
  v1EventInfo:
    type: object
    properties:
      id:
        type: string
      contractId:
        type: string
      txHash:
        type: string
      txIndex:
        type: integer
        format: int64
      event:
        type: object
  v1EventResponse:
    type: object
    properties:
      event:
        $ref: '#/definitions/v1EventInfo'
      found:
        type: boolean
  v1Ledger:
    type: object
    properties:
      sequence:
        type: integer
        format: int64
      hash:
        type: string
      prevHash:
        type: string
      transactions:
        type: integer
        format: int64
      operations:
        type: integer
        format: int64
  v1LedgerCountResponse:
    type: object
    properties:
      count:
        type: string
        format: int64
  v1LedgerHashResponse:
    type: object
    properties:
      ledger:
        $ref: '#/definitions/v1Ledger'
      found:
        type: boolean
  v1LedgerResponse:
    type: object
    properties:
      ledger:
        $ref: '#/definitions/v1Ledger'
      found:
        type: boolean
  v1TransactionInfo:
    type: object
    properties:
      hash:
        type: string
      status:
        type: string
      ledger:
        type: integer
        format: int64
      applicationOrder:
        type: integer
        format: int64
      envelope:
        type: object
      result:
        type: object
      resultMeta:
        type: object
      sourceAddress:
        type: string
  v1TransactionResponse:
    type: object
    properties:
      transaction:
        $ref: '#/definitions/v1TransactionInfo'
      found:
        type: boolean
  v1TransactionsAtLedgerHashResponse:
    type: object
    properties:
      txs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TransactionInfo'
      page:
        type: integer
        format: int32
  v1TransactionsAtLedgerSeqResponse:
    type: object
    properties:
      txs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TransactionInfo'
      page:
        type: integer
        format: int32
  v1TransactionsByAddressResponse:
    type: object
    properties:
      txs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TransactionInfo'
      page:
        type: integer
        format: int32
