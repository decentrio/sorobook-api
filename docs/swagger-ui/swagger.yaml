swagger: "2.0"
info:
  title: Sorobook
  version: 1.0.0
tags:
  - name: Query
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/burn-events/from/{from}:
    get:
      summary: BurnEventsFrom queries 10 events that match the given from address and page.
      operationId: Query_BurnEventsFrom
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BurnEventsFromResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: from
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/burn-events/{contractId}:
    get:
      summary: BurnEvents queries 10 events that match the given contract id and page.
      operationId: Query_BurnEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1BurnEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/clawback-events/admin/{admin}:
    get:
      summary: ClawbackEventsAdmin queries 10 events that match the given admin address and page.
      operationId: Query_ClawbackEventsAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ClawbackEventsAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: admin
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/clawback-events/from/{from}:
    get:
      summary: ClawbackEventsFrom queries 10 events that match the given drom address and page.
      operationId: Query_ClawbackEventsFrom
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ClawbackEventsFromResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: from
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/clawback-events/{contractId}:
    get:
      summary: ClawbackEvents queries 10 events that match the given contract id and page.
      operationId: Query_ClawbackEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ClawbackEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/contract-entries/{contractId}:
    get:
      summary: ContractData queries list newest data entries of contract
      operationId: Query_ContractData
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ContractDataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/events-at-ledger/{contractId}/{ledger}:
    get:
      summary: EventsAtLedger queries all events of contract at specific ledger sequence.
      operationId: Query_EventsAtLedger
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EventsAtLedgerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
        - name: ledger
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Query
  /v1/events/count/{contractId}:
    get:
      summary: |-
        ContractEventCount queries number of events that match the given contract
        id.
      operationId: Query_ContractEventCount
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ContractEventCountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
      tags:
        - Query
  /v1/events/{contractId}:
    get:
      summary: ContractEvents queries 10 events that match the given page.
      operationId: Query_ContractEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ContractEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/events/{id}:
    get:
      summary: Event queries event info given event id.
      operationId: Query_Event
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1EventResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Query
  /v1/ledger-by-hash/{hash}:
    get:
      summary: LedgerHash queries ledger info given ledger hash.
      operationId: Query_LedgerHash
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LedgerHashResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: hash
          in: path
          required: true
          type: string
      tags:
        - Query
  /v1/ledger-by-seq/{seq}:
    get:
      summary: Ledger queries ledger info given ledger sequence.
      operationId: Query_Ledger
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LedgerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: seq
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Query
  /v1/mint-events/admin/{admin}:
    get:
      summary: MintEventsAdmin queries 10 events that match the given admin and page.
      operationId: Query_MintEventsAdmin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MintEventsAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: admin
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/mint-events/to/{to}:
    get:
      summary: MintEventsTo queries 10 events that match the given to address and page.
      operationId: Query_MintEventsTo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MintEventsToResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: to
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/mint-events/{contractId}:
    get:
      summary: MintEvents queries 10 events that match the given contract id and page.
      operationId: Query_MintEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1MintEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/transactions-at-ledger-hash/{ledgerHash}:
    get:
      summary: |-
        TransactionsAtLedgerHash queries all transactions that match the given
        ledger hash.
      operationId: Query_TransactionsAtLedgerHash
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransactionsAtLedgerHashResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ledgerHash
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/transactions-at-ledger-seq/{ledger}:
    get:
      summary: |-
        TransactionsAtLedgerSeq queries all transactions that match the given
        ledger sequence.
      operationId: Query_TransactionsAtLedgerSeq
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransactionsAtLedgerSeqResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: ledger
          in: path
          required: true
          type: integer
          format: int64
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/transactions-by-address/{address}:
    get:
      summary: |-
        TransactionsByAddress queries all transactions that match the given source
        address.
      operationId: Query_TransactionsByAddress
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransactionsByAddressResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: address
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/transactions-by-contract/{contract}:
    get:
      summary: |-
        ContractTransactions queries all transactions that match the given
        contract id.
      operationId: Query_ContractTransactions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ContractTransactionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contract
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/transactions-contract-by-user/{contract}/{address}:
    get:
      summary: |-
        UserContractTransactions queries all transactions that match the given
        contract id and user address.
      operationId: Query_UserContractTransactions
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UserContractTransactionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contract
          in: path
          required: true
          type: string
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  /v1/transactions/{hash}:
    get:
      summary: Transaction queries transaction info given transaction hash.
      operationId: Query_Transaction
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransactionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: hash
          in: path
          required: true
          type: string
      tags:
        - Query
  /v1/transfer-events/from/{from}:
    get:
      summary: TransferEventsFrom queries 10 events that match the given from address and page.
      operationId: Query_TransferEventsFrom
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransferEventsFromResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: from
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/transfer-events/to/{to}:
    get:
      summary: TransferEventsTo queries 10 events that match the given from address and page.
      operationId: Query_TransferEventsTo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransferEventsToResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: to
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/transfer-events/{contractId}:
    get:
      summary: TransferEvents queries 10 events that match the given contract id and page.
      operationId: Query_TransferEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1TransferEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: contractId
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Query
  /v1/user-contracts/{address}:
    get:
      summary: UserInteractionContracts queries list contracts user has interacted.
      operationId: Query_UserInteractionContracts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1UserInteractionContractsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  protobufNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: |-
      `NullValue` is a singleton enumeration to represent the null value for the
      `Value` type union.

      The JSON representation for `NullValue` is JSON `null`.

       - NULL_VALUE: Null value.
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1BurnEvent:
    type: object
    properties:
      id:
        type: string
      contractId:
        type: string
      txHash:
        type: string
      fromAddr:
        type: string
      amountHi:
        type: string
        format: int64
      amountLo:
        type: string
        format: uint64
  v1BurnEventsFromResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1BurnEvent'
  v1BurnEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1BurnEvent'
  v1ClawbackEvent:
    type: object
    properties:
      id:
        type: string
      contractId:
        type: string
      txHash:
        type: string
      adminAddr:
        type: string
      fromAddr:
        type: string
      amountHi:
        type: string
        format: int64
      amountLo:
        type: string
        format: uint64
  v1ClawbackEventsAdminResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ClawbackEvent'
  v1ClawbackEventsFromResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ClawbackEvent'
  v1ClawbackEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ClawbackEvent'
  v1ContractDataResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ContractEntryInfo'
  v1ContractEntryInfo:
    type: object
    properties:
      key:
        type: object
      value:
        type: object
  v1ContractEventCountResponse:
    type: object
    properties:
      total:
        type: string
        format: int64
  v1ContractEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1EventInfo'
  v1ContractTransactionsResponse:
    type: object
    properties:
      txs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TransactionInfo'
  v1EventInfo:
    type: object
    properties:
      id:
        type: string
      contractId:
        type: string
      txHash:
        type: string
      event:
        type: object
  v1EventResponse:
    type: object
    properties:
      event:
        $ref: '#/definitions/v1EventInfo'
      found:
        type: boolean
  v1EventsAtLedgerResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1EventInfo'
  v1Ledger:
    type: object
    properties:
      seq:
        type: integer
        format: int64
      hash:
        type: string
      prevHash:
        type: string
      transactions:
        type: integer
        format: int64
      operations:
        type: integer
        format: int64
  v1LedgerHashResponse:
    type: object
    properties:
      ledger:
        $ref: '#/definitions/v1Ledger'
      found:
        type: boolean
  v1LedgerResponse:
    type: object
    properties:
      ledger:
        $ref: '#/definitions/v1Ledger'
      found:
        type: boolean
  v1MintEvent:
    type: object
    properties:
      id:
        type: string
      contractId:
        type: string
      txHash:
        type: string
      adminAddr:
        type: string
      toAddr:
        type: string
      amountHi:
        type: string
        format: int64
      amountLo:
        type: string
        format: uint64
  v1MintEventsAdminResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MintEvent'
  v1MintEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MintEvent'
  v1MintEventsToResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1MintEvent'
  v1TranferEvent:
    type: object
    properties:
      id:
        type: string
      contractId:
        type: string
      txHash:
        type: string
      fromAddr:
        type: string
      toAddr:
        type: string
      amountHi:
        type: string
        format: int64
      amountLo:
        type: string
        format: uint64
  v1TransactionInfo:
    type: object
    properties:
      hash:
        type: string
      status:
        type: string
      ledger:
        type: integer
        format: int64
      applicationOrder:
        type: integer
        format: int64
      envelope:
        type: object
      result:
        type: object
      resultMeta:
        type: object
      sourceAddress:
        type: string
  v1TransactionResponse:
    type: object
    properties:
      transaction:
        $ref: '#/definitions/v1TransactionInfo'
      found:
        type: boolean
  v1TransactionsAtLedgerHashResponse:
    type: object
    properties:
      txs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TransactionInfo'
  v1TransactionsAtLedgerSeqResponse:
    type: object
    properties:
      txs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TransactionInfo'
  v1TransactionsByAddressResponse:
    type: object
    properties:
      txs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TransactionInfo'
  v1TransferEventsFromResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TranferEvent'
  v1TransferEventsResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TranferEvent'
  v1TransferEventsToResponse:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TranferEvent'
  v1UserContractTransactionsResponse:
    type: object
    properties:
      txs:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1TransactionInfo'
  v1UserInteractionContractsResponse:
    type: object
    properties:
      contracts:
        type: array
        items:
          type: string
